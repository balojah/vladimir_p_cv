name: Deploy buy runner

on:
  push:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3.3.0
      - name: Set up Python
        uses: actions/setup-python@v4.5.0
        with:
          python-version: '3.10'
          architecture: 'x64'
      - name: Install requirements
        run: |
          pip install -r requirements.txt
          pip install coveralls
      - name: Run flake8
        run: cd my_cv && flake8 --ignore=E501,F401 .
      - name: Copy env secrets
        run: |
          echo "${{ secrets.ENV_TEST }}" > .env.prod
          echo "${{ secrets.ENV_LETSENCRYPT }}" > .env.letsencrypt
          echo "${{ secrets.GCLOUD_GITHUB_CRED }}" | base64 -d > .secrets.json
      - name: Get Cloud SQL Proxy
        run: |
          wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
          chmod +x cloud_sql_proxy
      - name: Connect cloud sql proxy
        run: |
          ./cloud_sql_proxy -instances=refined-gist-391303:europe-north1:post-db=tcp:5432 -credential_file .secrets.json &
      - name: Run migration
        run: cd my_cv && python manage.py makemigrations && python manage.py migrate
      - name: Run tests
        run: |
          cd my_cv && coverage run --source=vitae ./manage.py test --settings=my_cv.settings vitae && coverage report
          COVERALLS_REPO_TOKEN="${{ secrets.COVERALLS_REPO_TOKEN }}" coveralls
  prepare-environment:
    runs-on: self-hosted
    needs: test
    steps:
      - name: Copy env secrets
        run: |
          echo "${{ secrets.ENV_PROD }}" > .env.prod
          echo "${{ secrets.ENV_LETSENCRYPT }}" > .env.letsencrypt
      - name: Stop and remove containers, networks
        run: docker compose -f docker-compose.prod.yml down -v --remove-orphans
      - name: Remove unused data
        run: docker system prune -a -f
  deploy:
    runs-on: self-hosted
    needs: prepare-environment
    steps:
      - name: checkout repo
        uses: actions/checkout@v3.3.0
        with:
          clean: false
      - name: docker-compose
        run: docker compose -f docker-compose.prod.yml up -d --build